version: 0.2
env:
  variables:
    #ACCOUNT_NUMBER: "769080183509"
    AWS_DEFAULT_REGION: "ap-south-1"
    #ECR_REPOSITORY_NAME: "samplenode"
phases:
  install:
    runtime-versions:
      nodejs: 10
      docker: 18
    commands:
      - echo Installing Mocha...
      - npm install -g mocha
  pre_build:
    commands:
      - mkdir /downloads/sonarqube -p
      - cd /downloads/sonarqube
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.2.0.1873-linux.zip
      - unzip sonar-scanner-cli-4.2.0.1873-linux.zip
      - mv sonar-scanner-4.2.0.1873-linux /opt/sonar-scanner
      - echo -e "sonar.host.url=http://3.110.179.136:9000/ \n  sonar.sourceEncoding=UTF-8 \n sonar.qualitygate.wait=true " >> /opt/sonar-scanner/conf/sonar-scanner.properties
      - echo -e "#/bin/bash \n export PATH='$PATH:/opt/sonar-scanner/bin'" >> /etc/profile.d/sonar-scanner.sh
      - source /etc/profile.d/sonar-scanner.sh
      - sonar-scanner -v
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin 769080183509.dkr.ecr.ap-south-1.amazonaws.com
      - REPOSITORY_URI=769080183509.dkr.ecr.ap-south-1.amazonaws.com/samplenode
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      #- aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 769080183509.dkr.ecr.ap-south-1.amazonaws.com
      #- $(aws ecr get-login --region $ECR_REGION --no-include-email)
      #- REPOSITORY_URI=$ACCOUNT_NUMBER.dkr.ecr.$ECR_REGION.amazonaws.com/$ECR_REPOSITORY_NAME
      #- COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      #- IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Compiling the Node.js code
      - npm build
      #- aws codeartifact login --tool npm --repository samplenode --domain samplenode --domain-owner 769080183509 --region ap-south-1
      - cd ../..
      - cd /codebuild/output/
      - cd $CODEBUILD_SRC_DIR
      - sonar-scanner -Dsonar.projectKey=sonarscanner -Dsonar.sources=. -Dsonar.host.url=http://3.110.179.136:9000  -Dsonar.login=7f10e47042c386ab450fcddbf8adefb767339d6d
      - echo Building the Docker image... 
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      #- docker tag samplenode 769080183509.dkr.ecr.ap-south-1.amazonaws.com/samplenode:latest
      #- docker build -t $REPOSITORY_URI:latest .
      #- docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"samplenode","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      #- docker push 769080183509.dkr.ecr.ap-south-1.amazonaws.com/samplenode:latest
      #- docker push $REPOSITORY_URI:latest
      #- docker push $REPOSITORY_URI:$IMAGE_TAG
      #- echo Writing image definitions file...
      #- printf '[{"name":"samplenode","imageUri":"%s"}]' 769080183509.dkr.ecr.ap-south-1.amazonaws.com/samplenode:latest > imagedefinitions.json
      #- printf '[{"samplenode":"samplenode","769080183509.dkr.ecr.ap-south-1.amazonaws.com/samplenode:latest":"769080183509.dkr.ecr.ap-south-1.amazonaws.com/samplenode:latest"}]' > imagedefinitions.json
      #- cat imagedefinitions.json 
# Include only the files required for your application to run.
artifacts:
  files:
    - about.html
    - app.js
    - index.html
    - package.json
    - imagedefinitions.json